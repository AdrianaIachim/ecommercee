// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5q15U6pj6GWNAXQbRPqL8N
// Component: NvpN0MWPJ3NI77
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_copy_of_e_commerce.module.css"; // plasmic-import: 5q15U6pj6GWNAXQbRPqL8N/projectcss
import sty from "./PlasmicRatings.module.css"; // plasmic-import: NvpN0MWPJ3NI77/css
import StarIcon from "./icons/PlasmicIcon__Star"; // plasmic-import: wmlbKZ6U-YMQNj/icon

export const PlasmicRatings__VariantProps = new Array("stars");

export const PlasmicRatings__ArgProps = new Array("numReviews");

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicRatings__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "stars",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.stars
      }
    ],

    [$props, $ctx]
  );

  const $state = p.useDollarState(stateSpecs, { $props, $ctx, $queries });
  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_library_plasmic_color_type_css.plasmic_tokens,
        sty.root,
        {
          [sty.rootstars_five]: hasVariant($state, "stars", "five"),
          [sty.rootstars_four]: hasVariant($state, "stars", "four"),
          [sty.rootstars_one]: hasVariant($state, "stars", "one"),
          [sty.rootstars_three]: hasVariant($state, "stars", "three"),
          [sty.rootstars_two]: hasVariant($state, "stars", "two"),
          [sty.rootstars_zero]: hasVariant($state, "stars", "zero")
        }
      )}
    >
      <p.Stack
        as={"div"}
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox)}
      >
        {(hasVariant($state, "stars", "zero") ? true : true) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__eIymP, {
              [sty.svgstars_five__eIymPMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_zero__eIymPiw7CR]: hasVariant(
                $state,
                "stars",
                "zero"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : hasVariant($state, "stars", "two")
            ? true
            : hasVariant($state, "stars", "one")
            ? true
            : hasVariant($state, "stars", "zero")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__kfCFe, {
              [sty.svgstars_five__kfCFeMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__kfCFeUbdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_one__kfCFeNedHu]: hasVariant(
                $state,
                "stars",
                "one"
              ),

              [sty.svgstars_three__kfCFeHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              ),

              [sty.svgstars_two__kfCFeMyazc]: hasVariant(
                $state,
                "stars",
                "two"
              ),

              [sty.svgstars_zero__kfCFeIw7CR]: hasVariant(
                $state,
                "stars",
                "zero"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : hasVariant($state, "stars", "two")
            ? true
            : hasVariant($state, "stars", "one")
            ? true
            : hasVariant($state, "stars", "zero")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__dWYh, {
              [sty.svgstars_five__dWYhMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__dWYhUbdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_one__dWYhNedHu]: hasVariant($state, "stars", "one"),
              [sty.svgstars_three__dWYhHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              ),

              [sty.svgstars_two__dWYhMyazc]: hasVariant($state, "stars", "two"),
              [sty.svgstars_zero__dWYhIw7CR]: hasVariant(
                $state,
                "stars",
                "zero"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : hasVariant($state, "stars", "two")
            ? true
            : hasVariant($state, "stars", "one")
            ? true
            : hasVariant($state, "stars", "zero")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__yt08X, {
              [sty.svgstars_five__yt08XMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__yt08Xubdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_one__yt08XnedHu]: hasVariant(
                $state,
                "stars",
                "one"
              ),

              [sty.svgstars_three__yt08XHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              ),

              [sty.svgstars_two__yt08Xmyazc]: hasVariant(
                $state,
                "stars",
                "two"
              ),

              [sty.svgstars_zero__yt08Xiw7CR]: hasVariant(
                $state,
                "stars",
                "zero"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : hasVariant($state, "stars", "two")
            ? true
            : hasVariant($state, "stars", "one")
            ? true
            : hasVariant($state, "stars", "zero")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__dHeQ, {
              [sty.svgstars_five__dHeQMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__dHeQubdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_one__dHeQnedHu]: hasVariant($state, "stars", "one"),
              [sty.svgstars_three__dHeQHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              ),

              [sty.svgstars_two__dHeQmyazc]: hasVariant($state, "stars", "two"),
              [sty.svgstars_zero__dHeQiw7CR]: hasVariant(
                $state,
                "stars",
                "zero"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : hasVariant($state, "stars", "two")
            ? true
            : hasVariant($state, "stars", "one")
            ? true
            : hasVariant($state, "stars", "zero")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__cgiJg, {
              [sty.svgstars_five__cgiJgMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__cgiJgUbdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_one__cgiJgNedHu]: hasVariant(
                $state,
                "stars",
                "one"
              ),

              [sty.svgstars_three__cgiJgHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              ),

              [sty.svgstars_two__cgiJgMyazc]: hasVariant(
                $state,
                "stars",
                "two"
              ),

              [sty.svgstars_zero__cgiJgIw7CR]: hasVariant(
                $state,
                "stars",
                "zero"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : hasVariant($state, "stars", "two")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__kDmrs, {
              [sty.svgstars_five__kDmrsMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__kDmrsUbdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_three__kDmrsHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              ),

              [sty.svgstars_two__kDmrsMyazc]: hasVariant($state, "stars", "two")
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : hasVariant($state, "stars", "three")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__unHaa, {
              [sty.svgstars_five__unHaaMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four__unHaaubdow]: hasVariant(
                $state,
                "stars",
                "four"
              ),

              [sty.svgstars_three__unHaaHkTq9]: hasVariant(
                $state,
                "stars",
                "three"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(
          hasVariant($state, "stars", "five")
            ? true
            : hasVariant($state, "stars", "four")
            ? true
            : true
        ) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg___86Men, {
              [sty.svgstars_five___86MenMwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              ),

              [sty.svgstars_four___86MenUbdow]: hasVariant(
                $state,
                "stars",
                "four"
              )
            })}
            role={"img"}
          />
        ) : null}
        {(hasVariant($state, "stars", "five") ? true : true) ? (
          <StarIcon
            className={classNames(projectcss.all, sty.svg__vj4R2, {
              [sty.svgstars_five__vj4R2MwCbb]: hasVariant(
                $state,
                "stars",
                "five"
              )
            })}
            role={"img"}
          />
        ) : null}
      </p.Stack>
      {p.renderPlasmicSlot({
        defaultContents: "(45 Review)",
        value: args.numReviews,
        className: classNames(sty.slotTargetNumReviews)
      })}
    </p.Stack>
  );
}

const PlasmicDescendants = {
  root: ["root", "freeBox"],
  freeBox: ["freeBox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicRatings__ArgProps,
          internalVariantPropNames: PlasmicRatings__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicRatings__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicRatings";
  } else {
    func.displayName = `PlasmicRatings.${nodeName}`;
  }
  return func;
}

export const PlasmicRatings = Object.assign(
  // Top-level PlasmicRatings renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    // Metadata about props expected for PlasmicRatings
    internalVariantProps: PlasmicRatings__VariantProps,
    internalArgProps: PlasmicRatings__ArgProps
  }
);

export default PlasmicRatings;
/* prettier-ignore-end */
